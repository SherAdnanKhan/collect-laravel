 type User @model(class: "App\\Models\\User") {
 	# _id: ID! @globalId @rename(attribute: "id")
	id: ID!
	firstName: String! @rename(attribute: "first_name")
	lastName: String! @rename(attribute: "last_name")
	name: String!
	email: String!
	phone: String
	status: String!
	twoFactorEnabled: Boolean @rename(attribute: "two_factor_enabled")
	createdAt: String! @rename(attribute: "created_at")
	updatedAt: String @rename(attribute: "updated_at")
	stripeId: String @rename(attribute: "stripe_id")
	cardBrand: String @rename(attribute: "card_brand")
	cardLastFour: String @rename(attribute: "card_last_four")
	trialEndsAt: String @rename(attribute: "trial_ends_at")
	totalStorageUsed: Int! @rename(attribute: "total_storage_used")
	profile: UserProfile @hasOne
	favourites: [UserFavourite] @hasMany
	subscriptions: [UserSubscription] @hasMany
	projects: [Project] @hasMany(type: "paginator")
	parties: [Party] @hasMany(type: "paginator")
	files: [File] @hasMany(type: "paginator")
	songs: [Song] @hasMany(type: "paginator")
	comments: [Comment] @hasMany(type: "paginator")
	collaborators: [Collaborator] @hasMany

	# Optional field, returned when user is updating and needs 2fa verification.
	twoFactor: AuthTokenPayload @rename(attribute: "two_factor")
}

type UserProfile {
	_id: ID! @globalId @rename(attribute: "id")
	id: ID!
	user: User! @belongsTo
	studioType: String @rename(attribute: "studio_type")
	label: String
	jobRole: String @rename(attribute: "job_role")
	genre: String
	workload: Int
}

type UserFavourite @model(class: "App\\Models\\UserFavourite") {
	id: ID! @globalId
	user: User! @belongsTo
	resourceId: Int! @rename(attribute: "resource_id")
	resourceType: String! @rename(attribute: "resource_type")
	favoured: Favoured
	createdAt: String! @rename(attribute: "created_at")
	updatedAt: String @rename(attribute: "updated_at")
}

type UserSubscription @model(class: "App\\Models\\Subscription") {
	id: ID! @globalId
	user: User! @belongsTo
	name: String!
	stripeId: String! @rename(attribute: "stripe_id")
	stripePlan: String! @rename(attribute: "stripe_plan")
	quantity: Int!
	trialEndsAt: String @rename(attribute: "trial_ends_at")
	endsAt: String @rename(attribute: "ends_at")
	createdAt: String! @rename(attribute: "created_at")
	updatedAt: String @rename(attribute: "updated_at")
}

type Party implements Favoured {
	id: ID!
	_id: ID! @globalId @rename(attribute: "id")
	user: User @belongsTo
	userId: ID! @rename(attribute: "user_id")
	type: String!
	isni: String
	title: String
	prefix: String
	firstName: String! @rename(attribute: "first_name")
	middleName: String @rename(attribute: "middle_name")
	lastName: String @rename(attribute: "last_name")
	name: String!
	suffix: String
	birthDate: String @rename(attribute: "birth_date")
	deathDate: String @rename(attribute: "death_date")
	comments: String
	credits: [Credit] @hasMany
	contacts: [PartyContact] @hasMany
	addresses: [PartyAddress] @hasMany
	createdAt: String! @rename(attribute: "created_at")
	updatedAt: String @rename(attribute: "updated_at")
}

type PartyContact {
	id: ID!
	party: Party @belongsTo
	type: String!
	value: String!
	primary: Boolean
	createdAt: String! @rename(attribute: "created_at")
	updatedAt: String @rename(attribute: "updated_at")
}

type PartyAddress {
	id: ID!
	party: Party @belongsTo
	line1: String! @rename(attribute: "line_1")
	line2: String @rename(attribute: "line_2")
	line3: String @rename(attribute: "line_3")
	city: String!
	district: String!
	postalCode: String! @rename(attribute: "postal_code")
	territoryCode: String @rename(attribute: "territory_code")
	territoryCodeType: String @rename(attribute: "territory_code_type")
	createdAt: String! @rename(attribute: "created_at")
	updatedAt: String @rename(attribute: "updated_at")
}

type Instrument {
	id: ID!
	_id: ID! @globalId @rename(attribute: "id")
	category: String
	name: String!
	ddexKey: String! @rename(attribute: "ddex_key")
}

type Song implements Favoured & Creditable {
	_id: ID! @globalId @rename(attribute: "id")
	id: ID!
	user: User! @belongsTo
	userId: String! @rename(attribute: "user_id")
	type: SongType! @belongsTo
	title: String!
	name: String! @rename(attribute: "title")
	subtitle: String
	iswc: String
	titleAlt: String @rename(attribute: "title_alt")
	subtitleAlt: String @rename(attribute: "subtitle_alt")
	createdOn: String @rename(attribute: "created_on")
	description: String
	lyrics: String
	notes: String
	credits: [Credit] @hasMany
	createdAt: String! @rename(attribute: "created_at")
	updatedAt: String @rename(attribute: "updated_at")
}

type Credit {
	_id: ID! @globalId @rename(attribute: "id")
	id: ID!
	party: Party! @belongsTo
	role: CreditRole! @belongsTo
	instrument: Instrument @belongsTo
	performing: Boolean
	split: Int
	contributionId: Int! @rename(attribute: "contribution_id")
	contributionType: String! @rename(attribute: "contribution_type")
	contribution: Creditable!
	createdAt: String! @rename(attribute: "created_at")
	updatedAt: String @rename(attribute: "updated_at")
}

type CreditRole {
	_id: ID! @globalId @rename(attribute: "id")
	id: ID!
	type: String!
	name: String!
	ddexKey: String! @rename(attribute: "ddex_key")
	userDefined: Boolean! @rename(attribute: "user_defined")
}

type SongType {
	id: ID!
	name: String!
	createdAt: String! @rename(attribute: "created_at")
	updatedAt: String @rename(attribute: "updated_at")
}
