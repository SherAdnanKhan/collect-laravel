type Project implements Favoured {
	id: ID! @globalId
	user: User! @belongsTo
	name: String!
	description: String!
	createdAt: String! @rename(attribute: "created_at")
	updatedAt: String @rename(attribute: "updated_at")
	collaborators: [Collaborator] @hasMany(type: "paginator")
	files: [File] @hasMany
	folders: [Folder] @hasMany
	sessions: [Session] @hasMany(type: "paginator")
	recordings: [Recording] @hasMany(type: "paginator")
	comments: [Comment] @hasMany(type: "paginator")
}

type Collaborator {
	id: ID! @globalId
	user: User! @belongsTo
	project: Project! @belongsTo
	level: String!
}

type File implements Favoured {
	id: ID! @globalId
	user: User! @belongsTo
	project: Project! @belongsTo
	folder: Folder @belongsTo
	type: String!
	name: String!
	path: String!
	bitrate: Int
	bitdepth: Int
	status: String!
	createdAt: String! @rename(attribute: "created_at")
	updatedAt: String @rename(attribute: "updated_at")
}

type Folder implements Favoured {
	id: ID! @globalId
	user: User! @belongsTo
	project: Project! @belongsTo
	parent: Folder @belongsTo
	files: [File] @hasMany
	folders: [Folder] @hasMany
	name: String!
	depth: Int!
	createdAt: String! @rename(attribute: "created_at")
	updatedAt: String @rename(attribute: "updated_at")
}

type Recording implements Favoured {
	id: ID! @globalId
	project: Project! @belongsTo
	name: String
	type: String
	description: String
	sessions: [Session] @belongsToMany
}

type Session implements Favoured {
	id: ID! @globalId
	project: Project! @belongsTo
	studio: String
	name: String
	description: String
	createdAt: String! @rename(attribute: "created_at")
	updatedAt: String @rename(attribute: "updated_at")
	recordings: [Recording] @belongsToMany(type: "paginator")
	people: [Person] @belongsToMany(type: "paginator")
}

type Comment {
	id: ID! @globalId
	project: Project! @belongsTo
	user: User! @belongsTo
	resourceId: Int @rename(attribute: "resource_id")
	resourceType: String @rename(attribute: "resource_type")
	commentedOn: Favoured
	message: String
	createdAt: String! @rename(attribute: "created_at")
	updatedAt: String @rename(attribute: "updated_at")
}

type EventLog {
	id: ID! @globalId
	user: User! @belongsTo
	project: Project! @belongsTo
	resourceId: Int @rename(attribute: "resource_id")
	resourceType: String @rename(attribute: "resource_type")
	message: String
	createdAt: String! @rename(attribute: "created_at")
	updatedAt: String @rename(attribute: "updated_at")
}
