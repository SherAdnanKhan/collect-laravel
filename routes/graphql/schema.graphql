type Query {
	users: [User] @all
	user(id: Int! @eq): User @find
	projects: [Project] @all
	project(id: Int! @eq): Project @find
}

# type Mutation @group(namespace: "App\\Http\\GraphQL\\Mutations"){
# 	createUserFavourite(input: CreateUserFavouriteInput!): UserFavourite @field(resolver: "UserFavouriteMutator@create")
# }

type Mutation {
	createUserFavourite(input: CreateUserFavouriteInput!): UserFavourite @create(flatten: true)
}

input CreateUserFavouriteInput {
	user: CreateUserFavouriteRelation!
	resource_id: Int!
	resource_type: String!
}

# input CreateUserFavouriteInput {
#     user: CreateUserFavouriteRelation!
#     resourceId: Int! @renameInput(attribute: "resource_id")
#     resourceType: String! @renameInput(attribute: "resource_type")
# }

input CreateUserFavouriteRelation {
	connect: ID!
}

interface Favoured {
    id: ID!
}

#import user.graphql
#import project.graphql
